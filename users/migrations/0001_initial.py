# Generated by Django 4.1.5 on 2023-03-11 13:04

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', users.models.LowercaseEmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Seuls les caractères alphanumériques sont autorisés.')])),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Seuls les caractères alphanumériques sont autorisés.')])),
                ('gender', models.CharField(blank=True, choices=[('', 'Choose gender'), ('Homme', 'Homme'), ('Femme', 'Femme')], max_length=50)),
                ('type', models.CharField(default='Normal', max_length=50)),
                ('about', models.TextField(blank=True, max_length=500, verbose_name='compliment')),
                ('image', models.ImageField(blank=True, upload_to='media/user/', verbose_name='Photo de profil')),
                ('address', models.CharField(blank=True, max_length=1000)),
                ('phone', models.CharField(blank=True, max_length=16, null=True)),
                ('date_of_birth', models.DateField(default=datetime.date.today, verbose_name='Date de naissance')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', users.models.LowercaseEmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Seuls les caractères alphanumériques sont autorisés.')], verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Seuls les caractères alphanumériques sont autorisés.')], verbose_name='last name')),
                ('numero', models.CharField(max_length=14, verbose_name='numero')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ProAdditional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ent', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Seuls les chiffres entre 0 et 9 sont autorisés.')], verbose_name="Numero d'entreprise")),
                ('nom_ent', models.CharField(blank=True, max_length=100, verbose_name="Nom d'entreprise")),
                ('categorie', models.CharField(blank=True, help_text='entreprise categorie', max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Seuls les caractères alphanumériques sont autorisés.')])),
                ('address', models.CharField(blank=True, max_length=100, verbose_name="le lieu de l'entreprise")),
                ('justification', models.FileField(blank=True, upload_to='media/pro_justification')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NormalAdditional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
